@page
@* ----------------------------------------------------------------
   Equation Solver UI
   - Provides a calculator‑style keypad for entering equations
   - Posts the expression to the PageModel (EquationSolverModel)
   ---------------------------------------------------------------- *@
@model StudentFriendlyCalculator.Pages.EquationSolverModel
@{
    ViewData["Title"] = "Equation Solver";
    Layout = "_Layout";
}
@* External stylesheets:
   EquationCalc.css → grid layout / colours specific to this page
   site.css         → shared button & typography styles *@
<link rel="stylesheet" href="~/css/EquationCalc.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

<div id="functional-container">
    @* ------------ CALCULATOR TYPE TABS (Standard / Scientific / Equation) ------------ *@
    <div id="calc-select">
        <a href="/"><button class="calc-button" id="standard">Standard</button></a>
        <a href="/"><button class="calc-button" id="scientific">Scientific</button></a>
        <a href="/EquationSolver"><button class="calc-button" id="equation">Equation</button></a>
    </div>
    <div class="calc-holder">
        @* ------------ MAIN KEYPAD & DISPLAY ------------ *@
        <form method="post" asp-page-handler="Solve">
            <div id="calc-display-back">
                <input id="calc-display" asp-for="Equation" />
            </div>
            <div class="calc-interface">
                <!-- Row 1 : function keys & global controls -->
                <button type="button" class="calc-button-btwn">cos</button>
                <button type="button" class="calc-button-btwn">sin</button>
                <button type="button" class="calc-button-btwn">tan</button>
                <button type="button" class="calc-button-white">AC</button>
                <button type="button" class="calc-button-white">del</button>

                <!-- Row 2 : root and numbers 7‑9 / divide -->
                <button type="button" class="calc-button-btwn">√</button>
                <button type="button" class="calc-button">7</button>
                <button type="button" class="calc-button">8</button>
                <button type="button" class="calc-button">9</button>
                <button type="button" class="calc-button-op">÷</button>

                <!-- Row 3 : π and numbers 4‑6 / multiply -->
                <button type="button" class="calc-button-btwn">π</button>
                <button type="button" class="calc-button">4</button>
                <button type="button" class="calc-button">5</button>
                <button type="button" class="calc-button">6</button>
                <button type="button" class="calc-button-op">×</button>
                
                <!-- Row 4 : x² and numbers 1‑3 / minus -->
                <button type="button" class="calc-button-btwn">x²</button>
                <button type="button" class="calc-button">1</button>
                <button type="button" class="calc-button">2</button>
                <button type="button" class="calc-button">3</button>
                <button type="button" class="calc-button-op">−</button>

                <!-- Row 5 : variable x, dot, 0, equals, plus -->
                <button type="button" class="calc-button-op">x</button>
                <button type="button" class="calc-button-white">.</button>
                <button type="button" class="calc-button">0</button>
                <button type="submit" class="calc-button-white">=</button>
                <button type="button" class="calc-button-op">+</button>
            </div>
            @* ------------ BACKEND RESULT (bound via Model.Solution) ------------ *@
            @if (!string.IsNullOrEmpty(Model.Solution))
            {
                <div class="solution-display">
                    <strong>Solution:</strong> @Model.Solution
                </div>
            }
        </form>
    </div>
    <div id="hist-select">
        <button id="clear-hist" class="clear-hist">Clear History</button>
    </div>
</div>