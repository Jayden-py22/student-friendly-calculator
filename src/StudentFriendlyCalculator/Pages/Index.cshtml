@page
@model IndexModel
@{
    
    ViewData["Title"] = "Home page";
}

<div id="functional-container"> <!-- Container for all functional elements pertaining to calculator -->
    <div class="calc-select"> <!-- Divider for containing calculator options-->
        <a class="calc-button" href="#">Standard</a>
        <a href="calc-button" href="#">Scientific</a>
        <!-- More calculator buttons here -->
    </div>
    <div class="calc-holder">
        <!-- Calculator contents go here,
        would likely need to be adjusted using JS
        depending on selected calculator -->
    </div>
    <div class="hist-select"> <!-- Divider for containing history of all operations-->
        <div class="hist-option">
            <a class="hist-result" href="#">5</a> <!-- Import result of calculation into current bar of calculator, acting like a number button -->
            <p class="hist-operation">3 + 2</p>
            <a href="#">Standard</a> <!-- Optimally, there would be a button present here to switch to the calculator that the operation was completed in -->
            <!-- etc, etc...-->
        </div>
    </div>
</div

<!-- DEMONSTRATION CONTENT -->
<!-- Basic template code that came from  -->
@* <div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div> *@

<!-- DEMONSTRATION CONTENT -->
<!-- Simple input box for demonstration purposes -->
<div> 
    <h2>Enter Your Name</h2>
    <input type="text" id="nameInput" placeholder="Your name" />
    <!--Button press triggers submitName function-->
    <button onclick="submitName()">Submit</button>

    <p id="response"></p>
</div>

<!-- DEMONSTRATION CONTENT -->
<!-- JS for displaying name from input box. -->
<script>
    //submitName function
    function submitName() {
        //get the name from the input, turn it into a constant
        const name = document.getElementById("nameInput").value;
        //fetch makes an HTTP request, in this case with a "NameSubmission" name for the method
        fetch('/Index?handler=NameSubmission', {
            //We set it as POST, we are sending information
            method: 'POST',
            //We tell it that we are sending JSON data
            headers: {
                'Content-Type': 'application/json'
            },
            //Creates a JSON string from our variable
            body: JSON.stringify({ name: name })
        })
        //wait for response
        .then(response => response.json())
        //Extract the message, finds the ID in HTML, and sets the content to the message.
        .then(data => {
            document.getElementById("response").innerText = data.message;
        });
    }
</script>
